{:paths ["src/main/clojure" "src/dev/clojure" "src/dev/resources" "src/test/clojure" "src/test/resources" "modules/datasets/data"]

 :deps {org.clojure/clojure {:mvn/version "1.11.1"}
        com.xtdb.labs/xtdb-api {:local/root "api"}
        com.xtdb.labs/xtdb-wire-formats {:local/root "wire-formats"}
        com.xtdb.labs/xtdb-core {:local/root "core"}
        com.xtdb.labs/xtdb-client {:local/root "http-client-clj"}
        com.xtdb.labs/xtdb-server {:local/root "http-server"}
        com.xtdb.labs/xtdb-pgwire {:local/root "pgwire-server"}
        com.xtdb.labs/xtdb-flight-sql {:local/root "modules/flight-sql"}
        com.xtdb.labs/xtdb-datasets {:local/root "modules/datasets"}

        com.xtdb.labs/xtdb-kafka {:local/root "modules/kafka"}
        com.xtdb.labs/xtdb-s3 {:local/root "modules/s3"}
        com.xtdb.labs/xtdb-azure {:local/root "modules/azure"}
        com.xtdb.labs/xtdb-google-cloud {:local/root "modules/google-cloud"}
        com.xtdb.labs/xtdb-jdbc {:local/root "modules/jdbc"}
        com.xtdb.labs/xtdb-bench {:local/root "modules/bench"}
        com.xtdb.labs/xtdb-c1-import {:local/root "modules/c1-import"}

        integrant/repl {:mvn/version "0.3.2"}
        org.slf4j/slf4j-api {:mvn/version "1.7.36"}
        ch.qos.logback/logback-classic {:mvn/version "1.2.10"}
        cheshire/cheshire {:mvn/version "5.10.0"}

        org.clojure/data.csv {:mvn/version "1.0.0"}
        org.clojure/tools.namespace {:mvn/version "1.2.0"}
        org.clojure/test.check {:mvn/version "1.1.1"}

        org.postgresql/postgresql {:mvn/version "42.2.20"}
        org.xerial/sqlite-jdbc {:mvn/version "3.36.0.3"}
        org.apache.arrow/flight-sql-jdbc-driver {:mvn/version "12.0.1"}

        io.github.cognitect-labs/test-runner {:git/tag "v0.5.0" :git/sha "b3fd0d2"}
        com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.0.3"}}

 :aliases {:xtdb {:jvm-opts ["--add-opens=java.base/java.nio=ALL-UNNAMED" ; needed on JDK16 to allow Netty/Arrow access DirectBuffer internals
                              "-Dio.netty.tryReflectionSetAccessible=true"]}

           :debug {:jvm-opts
                   [#_"-Darrow.enable_null_check_for_get=false"
                    #_"-Dclojure.spec.check-asserts=false" ;; default is true
                    #_"--add-modules=jdk.incubator.vector" ;; doesn't work if it doesn't exist, like on JDK11.
                    #_"--add-modules=ALL-SYSTEM" ;; enables all incubator modules instead
                    #_"-Darrow.memory.debug.allocator=true"
                    #_"-Darrow.enable_unsafe_memory_access=true"]}

           :profiler {:jvm-opts ["-Djdk.attach.allowAttachSelf"]}

           :4gb {:jvm-opts ["-Xmx1280m"
                            "-Xms1280m"
                            "-XX:MaxDirectMemorySize=2g"
                            "-XX:MaxMetaspaceSize=512m"]}

           :6gb {:jvm-opts ["-Xmx2g"
                            "-Xms2g"
                            "-XX:MaxDirectMemorySize=3g"
                            "-XX:MaxMetaspaceSize=1g"]}

           :test {:exec-fn cognitect.test-runner.api/test
                  :exec-args {:excludes [:integration :timescale :s3 :kafka :jdbc :slt :docker :azure :google-cloud]
                              :dirs ["src/test/clojure"]}}

           :integration-test {:exec-fn cognitect.test-runner.api/test
                              :exec-args {:includes [:integration]
                                          :dirs ["src/test/clojure"]}}

           :timescale-test {:exec-fn cognitect.test-runner.api/test
                            :exec-args {:includes [:timescale]}
                            :dirs ["src/test/clojure"]}

           :slt-test {:main-opts
                      ["-m" "xtdb.sql.logic-test.runner"
                       "--verify"
                       "--db" "xtdb"
                       "--max-failures" "0"
                       "--max-errors" "0"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/xtdb.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/select1.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/select2.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/select3.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/select4.test"
                       #_"src/test/resources/xtdb/sql/logic_test/sqlite_test/select5.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/random/expr/slt_good_0.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/random/aggregates/slt_good_0.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/random/groupby/slt_good_0.test"
                       "src/test/resources/xtdb/sql/logic_test/sqlite_test/random/select/slt_good_0.test"]}

           :slt-test-2 {:main-opts
                        ["-m" "xtdb.sql.logic-test.runner"
                         "--verify"
                         "--db" "xtdb"
                         "--max-failures" "0"
                         "--max-errors" "0"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/between/1/slt_good_0.test"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/commute/10/slt_good_0.test"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/in/10/slt_good_0.test"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/orderby/10/slt_good_0.test"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/orderby_nosort/10/slt_good_0.test"
                         "src/test/resources/xtdb/sql/logic_test/sqlite_test/index/random/10/slt_good_0.test"]}

           :slt-test-dirs {:main-opts
                           ["-m" "xtdb.sql.logic-test.runner"
                            "--verify"
                            "--dirs"
                            "--db" "xtdb"]}

           :slt-print-results {:exec-fn xtdb.sql.logic-test.runner/print-results-table
                               :exec-args {:max-failures 0
                                           :max-errors 61}}

           :s3-test {:exec-fn cognitect.test-runner.api/test
                     :exec-args {:includes [:s3]}
                     :dirs ["src/test/clojure"]}

           :kafka-test {:exec-fn cognitect.test-runner.api/test
                        :exec-args {:includes [:kafka]
                                    :dirs ["src/test/clojure"]}}

           :jdbc-test {:exec-fn cognitect.test-runner.api/test
                       :exec-args {:includes [:jdbc]
                                   :dirs ["src/test/clojure"]}}

           :docker-test {:exec-fn cognitect.test-runner.api/test
                         :exec-args {:includes [:docker]
                                     :dirs ["src/test/clojure"]}}

           :uberjar {:deps {io.github.seancorfield/build-clj {:git/tag "v0.6.7" :git/sha "22c2d09"}}
                     :replace-paths []
                     :exec-fn org.corfield.build/uber
                     :exec-args {:main xtdb.main
                                 :ns-compile [xtdb.main]
                                 :uber-file "target/xtdb-standalone.jar"}}

           :bench-tpch {:main-opts ["-m" "xtdb.bench.tpch"]}

           :lint {:replace-paths []
                  :replace-deps {org.clojure/clojure {:mvn/version "1.11.0"}
                                 com.github.clojure-lsp/clojure-lsp {:mvn/version "2022.03.26-18.47.08"}}
                  :exec-fn clojure-lsp.api/diagnostics
                  :exec-args {:dry? true}}}}
