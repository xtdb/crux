---
const { hidden, systemTime, txs } = Astro.props;

var props = {
    'data-hidden': hidden ? 'true' : undefined,
    'data-system-time': systemTime ? systemTime : undefined,
    'data-txs': txs.trim(),
}
---
<div class:list={[{hidden: hidden}, "relative flex flex-col"]}>
    { systemTime && <div class="px-1 mx-auto max-lg:after:content-[':'] lg:mx-0 lg:absolute lg:top-0 lg:right-0">{systemTime}</div> }
    <div class="p-1 bg-gray-100 dark:bg-gray-800 rounded-md">
        <fiddle-txs {...props} />
    </div>
</div>

<script>
    import { makeEditor } from "./editor.ts"

    class FiddleTxs extends HTMLElement {
        constructor() {
            super();
            if (!this.dataset.hidden) {
                this.editor = makeEditor({
                    initialText: this.dataset.txs,
                    parent: this,
                });
            }
        }

        get originalTxs() {
            return this.dataset.txs;
        }

        get txs() {
            if (this.editor) {
                return this.editor.state.doc.toString();
            } else {
                return this.dataset.txs;
            }
        }
    }

    customElements.define('fiddle-txs', FiddleTxs);
</script>
